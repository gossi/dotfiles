# color
export CLICOLOR=1;

# listings
alias l="ls -le";
alias la="ls -la";
alias lsd='ls -l | grep "^d"'

# directory stuff
alias md=mkdir

#navigation
alias ..="cd .."
alias cd..="cd .."

# beautiful cat
alias c='pygmentize -O style=monokai -f console256 -g'
alias cat='bat'

# IP addresses
alias localip="ipconfig getifaddr en1"

# File size
alias fs="stat -f \"%z bytes\""

# Ping
alias ping='prettyping --nolegend'

# Preview
alias preview="fzf --preview 'bat --color \"always\" {}'"
# add support for ctrl+o to open selected file in VS Code
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(code {})+abort'"

# htop
alias top="htop"

# du improved (ncdu)
alias du="ncdu --color dark -rr -x --exclude .git"

# tldr/help
alias help='tldr'


# bash prompt
# taken from: from https://github.com/paulirish/dotfiles

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		# print all colors:
		# http://www.commandlinefu.com/commands/view/6533/print-all-256-colors-for-testing-term-or-for-a-quick-reference
		RED=$(tput setaf 1)
		GREEN=$(tput setaf 22)
		ORANGE=$(tput setaf 172)
		BLUE=$(tput setaf 27)
		MAGENTA=$(tput setaf 5)
		CYAN=$(tput setaf 50)
		WHITE=$(tput setaf 231)
		PURPLE=$(tput setaf 19)
		LIGHTPURPLE=$(tput setaf 141)
		YELLOW=$(tput setaf 190)
		NORMAL=$(tput setaf 256)
	else
		RED=$(tput setaf 1)
		GREEN=$(tput setaf 2)
		ORANGE=$(tput setaf 3)
		BLUE=$(tput setaf 4)
		MAGENTA=$(tput setaf 5)
		CYAN=$(tput setaf 6)
		WHITE=$(tput setaf 7)
		PURPLE=MAGENTA
		LIGHTPURPLE=MAGENTA
		YELLOW=GREEN
		NORMAL=$(tput setaf 8)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	RED="\033[0;31m"
	GREEN="\033[0;32m"
	ORANGE="\033[1;31m"
	BLUE="\033[0;34m"
	MAGENTA="\033[1;35m"
	CYAN="\033[1;36m"
	WHITE="\033[1;37m"
	PURPLE="\033[0;35m"
	YELLOW="\033[1;33m"
	BOLD=""
	RESET="\033[m"
	NORMAL=RESET
fi

function git_info() {
        # check if we're in a git repo
        git rev-parse --is-inside-work-tree &>/dev/null || return

        # quickest check for what branch we're on
        branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

        # check if it's dirty (via github.com/sindresorhus/pure)
        dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

        echo $WHITE" on "$LIGHTPURPLE$branch$dirty
}

# iTerm Tab and Title Customization and prompt customization
#
# Put the penultimate and current directory
# in the iterm tab (which doesn't work):
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]
# \[\e]1;STRING\[\a\] -> tab bar
# \[\e]2;STRING\[\a\] -> window bar
# everything that follows tha last bell sequence (\a) will be part of the prompt
PS1="\[\e]2;\u@\h: \w\[\a\]\[\e]1;\]\w\[\a\]\[$CYAN\]\u \[$WHITE\]at \[$ORANGE\]\h \[$WHITE\]in \[$YELLOW\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"
